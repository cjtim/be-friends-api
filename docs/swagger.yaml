basePath: /
definitions:
  auth.CustomClaims:
    properties:
      aud:
        description: the `aud` (Audience) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.3
        items:
          type: string
        type: array
      created_at:
        type: string
      email:
        type: string
      exp:
        $ref: '#/definitions/jwt.NumericDate'
        description: the `exp` (Expiration Time) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.4
      iat:
        $ref: '#/definitions/jwt.NumericDate'
        description: the `iat` (Issued At) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.6
      id:
        type: string
      is_admin:
        type: boolean
      is_org:
        type: boolean
      iss:
        description: the `iss` (Issuer) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.1
        type: string
      jti:
        description: the `jti` (JWT ID) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.7
        type: string
      line_uid:
        type: string
      name:
        type: string
      nbf:
        $ref: '#/definitions/jwt.NumericDate'
        description: the `nbf` (Not Before) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.5
      password:
        type: string
      picture_url:
        type: string
      sub:
        description: the `sub` (Subject) claim. See https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.2
        type: string
      updated_at:
        type: string
    type: object
  auth.loginBody:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  img.UploadResp:
    properties:
      downloadURL:
        type: string
    type: object
  jwt.NumericDate:
    properties:
      time.Time:
        type: string
    type: object
  pet.CreateBody:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      lat:
        type: number
      lng:
        type: number
      name:
        type: string
      status:
        type: string
      tag_ids:
        items:
          type: integer
        type: array
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  repository.Pet:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      lat:
        type: number
      lng:
        type: number
      name:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  repository.User:
    properties:
      created_at:
        type: string
      description:
        type: string
      email:
        type: string
      id:
        type: string
      is_admin:
        type: boolean
      is_org:
        type: boolean
      lat:
        type: number
      line_uid:
        type: string
      lng:
        type: number
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      picture_url:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
  title: Be Friends API
  version: "1.0"
paths:
  /api/v1/auth/line:
    get:
      description: Get LINE login url and register user's host to redirect back
      parameters:
      - description: localhost:3000
        in: query
        name: host
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: https://access.line.me/oauth2/v2.1/authorize
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get LINE login url
      tags:
      - auth
  /api/v1/auth/line/callback:
    get:
      description: Redirect user back to the website they're coming from
      parameters:
      - description: 123456abcdef
        in: query
        name: state
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          headers:
            Location:
              description: https://localhost:3000/user
              type: string
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Receive callback from LINE and redirect user back to the website they're
        coming from
      tags:
      - auth
  /api/v1/auth/line/jwt:
    get:
      description: Exchange code from line to jwt
      parameters:
      - description: 123456abcdef
        in: query
        name: state
        required: true
        type: string
      - description: 123456abcdef
        in: query
        name: code
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: JWT TOKEN....
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Exchange code from line to jwt
      tags:
      - auth
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login email password
      parameters:
      - description: Login body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.loginBody'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login email password
      tags:
      - auth
  /api/v1/auth/me:
    get:
      description: JWT claim infomation
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.CustomClaims'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: JWT claim infomation
      tags:
      - auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register with email password
      parameters:
      - description: Register body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/repository.User'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Register with email password
      tags:
      - auth
  /api/v1/pet:
    get:
      description: list all pets from database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Pet'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: list all pets from database
      tags:
      - pet
    post:
      consumes:
      - application/json
      description: Create pet
      parameters:
      - description: Pet details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/pet.CreateBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pet.CreateBody'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Create pet
      tags:
      - pet
  /api/v1/pet/img:
    post:
      consumes:
      - multipart/form-data
      description: Upload file to pet object and return downloadURL
      parameters:
      - description: File upload
        in: formData
        name: file
        required: true
        type: file
      - description: PetId
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/img.UploadResp'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Upload file to pet object and return downloadURL
      tags:
      - pet
  /api/v1/shelter:
    get:
      description: list all shelters from database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repository.User'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: list all shelters from database
      tags:
      - shelter
  /api/v1/shelter/{id}:
    get:
      description: list shelter by id from database
      parameters:
      - description: shelter id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: list shelter by id from database
      tags:
      - shelter
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
